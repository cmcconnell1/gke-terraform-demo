#!/usr/bin/env bash

if [[ "${uname}" == "Darwin" ]]; then
    # macos
    platform="darwin"
    echo "This script currently supports MacOS only..."
elif [[ "${uname}" == "Linux" ]]; then
    platform="linux"
    echo "unsupported OS please use macOS, exiting..."
    exit 1
fi

TFVARS="./terraform/variables.auto.tfvars"

# PROJ & BUCKET NAME: demox-4567999
#SERVICE_ACCOUNT=demo-gke now gke-demo
PROJECT_NAME=$(awk -F "= " '/project_id/ {print $2}' ${TFVARS} | sed 's/"//g')
BUCKET_NAME=$(awk -F "= " '/bucket_name/ {print $2}' ${TFVARS} | sed 's/"//g')
SERVICE_ACCOUNT=$(awk -F "= " '/service_account/ {print $2}' ${TFVARS} | sed 's/"//g')
ACCOUNT_ID="$(gcloud alpha billing accounts list --format json | jq ".[] | .name" | awk -F "/" '{print $2}' | sed 's/"//g')"
GCP_REGION=$(awk -F "= " '/region/ {print $2}' ${TFVARS} | sed 's/"//g')
GCP_ZONE=$(awk -F "= " '/zone/ {print $2}' ${TFVARS} | sed 's/"//g')

echo "using the following vars:
PROJECT_NAME $PROJECT_NAME
BUCKET_NAME $BUCKET_NAME
SERVICE_ACCOUNT $SERVICE_ACCOUNT
ACCOUNT_ID $ACCOUNT_ID
GCP_REGION $GCP_REGION
GCP_ZONE $GCP_ZONE
"

# Prerequisites
# brew install tfenv
# https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke
gcloud components install gke-gcloud-auth-plugin
gke-gcloud-auth-plugin --version 
gcloud components update

gcloud services enable cloudbilling.googleapis.com
gcloud services enable compute.googleapis.com
gcloud services enable servicenetworking.googleapis.com
gcloud services enable cloudresourcemanager.googleapis.com
gcloud services enable container.googleapis.com

gcloud config set compute/region us-west1
gcloud config set compute/zone us-west1-a

gcloud projects create "$PROJECT_NAME" --name="$PROJECT_NAME" --labels=env=develop
gcloud config set project $PROJECT_NAME

# create service account for gke cluster
gcloud iam service-accounts create $SERVICE_ACCOUNT

# create project 'demo' with random number sequence for project name
gcloud beta billing projects link $PROJECT_NAME --billing-account $ACCOUNT_ID

# grant requisite creds service account allowing creation of the GKE cluster and its resources
# https://cloud.google.com/iam/docs/granting-changing-revoking-access
gcloud projects add-iam-policy-binding ${PROJECT_NAME} --member serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com --role "roles/container.admin"
gcloud projects add-iam-policy-binding ${PROJECT_NAME} --member serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com --role "roles/compute.admin"
gcloud projects add-iam-policy-binding ${PROJECT_NAME} --member serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com --role "roles/iam.serviceAccountUser"
gcloud projects add-iam-policy-binding ${PROJECT_NAME} --member serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com --role "roles/resourcemanager.projectIamAdmin"
#â”‚ need the below for the SA account creations Error creating service account: googleapi: Error 403: Permission iam.serviceAccounts.create is required to perform this operation on project projects/demox-4567999., forbidden
gcloud projects add-iam-policy-binding ${PROJECT_NAME} --member serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com --role "roles/iam.serviceAccountAdmin"
gcloud projects add-iam-policy-binding ${PROJECT_NAME} --member serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com --role "roles/storage.objectViewer"

# create a key that Terraform will use to authenticate as the service account against the Google Cloud Platform API
gcloud iam service-accounts keys create ./secrets/terraform-gke-keyfile.json --iam-account=${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com

# create a bucket for best practices managing Terraform state with remote teams
gsutil mb -p ${PROJECT_NAME} -c regional -l us-west1 gs://${BUCKET_NAME}/

# activate object versioning for terraform bucket to allow for state recovery
gsutil versioning set on gs://${BUCKET_NAME}/

# grant read/write creds to our SA for the terraform state bucket 
gsutil iam ch serviceAccount:${SERVICE_ACCOUNT}@${PROJECT_NAME}.iam.gserviceaccount.com:legacyBucketWriter gs://${BUCKET_NAME}/
